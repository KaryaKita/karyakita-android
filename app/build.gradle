apply plugin: 'com.android.application'
apply plugin: 'realm-android'


ext.versionMajor = 1
ext.versionMinor = 0
ext.versionPatch = 0
ext.versionClassifier = null
ext.isSnapshot = true
ext.minimumSdkVersion = 22

android {
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    dataBinding {
        enabled = true
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.karyakita.karyakita_android_new"
        minSdkVersion project.ext.minimumSdkVersion
        targetSdkVersion 28
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        versionCode generateVersionCode()
        versionName generateVersionName()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:palette-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:preference-v7:28.0.0'
    implementation 'com.android.support:support-core-utils:28.0.0'
    implementation 'com.android.support:support-fragment:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:gridlayout-v7:28.0.0'
    implementation 'com.android.support:animated-vector-drawable:28.0.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'de.hdodenhof:circleimageview:2.2.0'

    // Long shadows
    implementation 'com.sdsmdg.harjot:longshadows:1.0.1'

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    //ButterKnife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //RxJava2
    //noinspection GradleDynamicVersion
    implementation "io.reactivex.rxjava2:rxjava:2+"
    //noinspection GradleDynamicVersion
    implementation 'io.reactivex.rxjava2:rxandroid:2+'

    //Retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    //noinspection GradleDynamicVersion
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2+'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'

    //Glide
    //noinspection GradleDynamicVersion
    implementation 'com.github.bumptech.glide:glide:4.8.0'

    implementation 'com.wang.avi:library:2.1.3'

    // Realm
    implementation 'io.realm:android-adapters:2.0.0'


    implementation 'pub.devrel:easypermissions:0.2.0'
    implementation 'com.yarolegovich:discrete-scrollview:1.4.9'
}

private Integer generateVersionCode() {
    return ext.minimumSdkVersion * 10000000 + ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier == null && ext.isSnapshot) {
        ext.versionClassifier = "beta"
    }

    if (ext.versionClassifier != null) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName;
}
